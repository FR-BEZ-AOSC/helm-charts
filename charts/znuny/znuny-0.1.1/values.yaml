# Default values for znuny-helm-charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: {}
# nameOverride: ""

namespaceOverride: {}
# namespaceOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "znuny"

restartPolicy: Always
deploymentStrategy: Recreate
replicaCount: 1

image:
  repository: ghcr.io/fr-bez-aosc/docker-znuny
  tag: 6.1.1-0
  pullPolicy: IfNotPresent
  pullSecrets: []
    # - name: gh
    #   secret: 

config:
  logs:
    path: /var/log/znuny

  database:
    # host: postgresql.default.svc.cluster.local
    port: 5432
    name: znuny
    user: znuny
    password: password

  apache:
    domain: znuny.domain.tld
    # rewriteRules: |-
    #   RewriteRule ^/$ https://%{HTTP_HOST}/otrs/customer.pl
    #   RewriteRule ^/otrs/$ https://%{HTTP_HOST}/otrs/customer.pl
    #   RewriteRule ^/otrs$ https://%{HTTP_HOST}/otrs/customer.pl

  users:
    admin:
      name: root@localhost
      password: password

  mails:
    type: internal
    # host: smtp.domain.tld
    # port: 25
    # user: znuny@domain.tld
    # password: password

  authentications:
    customers:
      backends: {}
      # backends:
      #   - |-
      #
      synchronizations: {}
      # synchronizations:
      # - |-
      #
    agents:
      backends: {}
      # backends:
      # - |-
      #
      synchronizations: {}
      # synchronizations:
      # - |-
      #

autoscaling: {}
# autoscaling:
#   minReplicas: 1
#   maxReplicas: 3
#   targetCPUUtilizationPercentage: 20
#   targetMemoryUtilizationPercentage: 50

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  domain: znuny.domain.tld
  annotations: []
  # annotations:
  #   - "kubernetes.io/ingress.class: nginx"
  #   - "cert-manager.io/cluster-issuer: <issuer>"
  tls:
    enabled: false

persistentVolumeClaims: {}
# persistentVolumeClaims:
#   - name: "data"
#     size: "100Mi"
#     mount: "/datas"
#     accessModes:
#       - ReadWriteOnce

podAnnotations: {}
# podAnnotations:
#   - ""

resources: {}
# resources:
#   limits:
#     cpu: 1000m
#     memory: 1024Mi
#   requests:
#     cpu: 500m
#     memory: 512Mi


